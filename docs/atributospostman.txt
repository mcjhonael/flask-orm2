-- agregar en info description y de contacto name,email
-- dentro de los schema tbm add los protocolos http y https
-- que consume mi api application/json y produce lo mismo
-- el summary dentro de los metodos indicaria para k sirve cada metodosy de bajo una description tbm para saber que hace ese metodo
-- tags indica que pertenece al mismo bloque creado
-- deprecated = para indicar si ese end point aun sirve o no x eso colocamos true,false
-- #/definition ahi se borra los datos iniciales y tbm a donde bloque corresponde es mejor tenerlo en vacio o en 0 
-- recuerda que la ruta es http y no https
--una vez corregido vamos a file>save as json = me va descargar un archivo swagger.json 
-- decargamos el archivo y lo colocamos en la carpeta static para que se pueda renderizar xk esa es la carpeta de renderizado de js css html y json
-- libreria que nos permite subir nuestro swagger pip install flask-swagger-ui
-- luego agregamos sus valores de la doc de flask swaggerui
-- entramos a una cuenta de heroku para deployar nuestro api
-- new > y creamos nuestro espacio para subir nuestro api
-- para los adicionales tenemos que tener un archivo runtime.txt para establecer la version del lenguaje
-- nos sale un error en heroku Application error y que usemos heroku cli  
-- luego entramos a consola para ver si tenemos heroku --version
--heroku login y presionas cualquier boton
--heroku logs --app name-proyecto
-- heroku solo sube el proyecto pero nosotros debemos decirle que archivo es el que va subir xk hay muchos ese es el error H14 
-- para ello creamos un archivo uwsgi.ini = este archivo se encarga de decirle a heroku cual proceso web debe seguir 
-- recuerda que flask corre en los servidor uwsgi por lo cual en el archivo uwsgi.ini le colocamos eso [uwsgi] python corre en servidor de tipo uwsgi 
-- cual va ser nuestro puerto que vamos usar en nuestro proyecto que para eso diremos que nos de mejor el mismo heroku http-socket=:$(PORT) en esa variable heroku almanecera el puerto que nos va signar a nuestro proyecto
-- y el module=app:app levanta del modulo app el archivo app el 2do es el archivo k keremos levantar en nuestro puerto 
--luego creamo el archivo Profile sin extension sirve para darle configuracion a mi proyecto de heroku  web: uwsgi uwsgi.ini le decimos heroku este es un servidor de tipo web usamos un tipo uwsgi y toda la configuracion se encuentrra en el archivo uwsgi.ini

-- y hacemos un commit y push
--ahora en la la cmd de heroku colocamos 
heroku logs --app repos-jhonael --tail = tail indicara que va escuchar todo lo que pase con la aplicacion los error y etc
-- por ultimo en la lista de requerements colocamos solo escribir la libreia uwsgi y ya

-- hay servidores que si te dan alojamiento a base de datos y otros que no x ejemplo hay diferencia entre tu backend y tu base de datos ojo heroku tbm tiene para almacenar base de datos 
-- heroku nos muestra todos los completos quer nos ayudan a k nuestra aplicacion funcione de manera correcta  Resource > find more add-ons y en la categorias buscamos Data Stores si sirven para almacenar informacion  para esteproyecto usamos el de Jaws DB MySQL que contrataremos este servicio  ya una ves que estemos dentro entonces aremos lo siguiente contratamos el modo free y lo instalamos 
-- entramos dentro de esa aplicacion y cogemos las variables de configuracion k tiene y esas vriables debemos colocarlo en dentro de settings>config vars Y LISTO AGREGAR 
>heroku config:set ENV=production  --app repos-jhonael esto colocar en la consola de heroku
